<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">

    <!-- Creates a staging update for a product -->
    <!-- Assumes that you are already on the entities edit page -->
    <actionGroup name="createEntityNameStagingUpdate">
        <arguments>
            <argument name="stagingUpdate" defaultValue="_defaultStaging"/>
            <argument name="endDate" defaultValue=""/>
        </arguments>

        <!-- Fill out the staging update details -->
        <click stepKey="scheduleNewUpdateBtn" selector="{{AdminStagingSlideOutSection.scheduleNewUpdateBtn}}"/>
        <fillField stepKey="fillName" selector="{{AdminStagingSlideOutSection.updateName}}" userInput="{{stagingUpdate.name}}"/>
        <fillField stepKey="fillDescription" selector="{{AdminStagingSlideOutSection.updateDescription}}" userInput="{{stagingUpdate.description}}"/>

        <!-- Check to see if it is close to the new minute. If so, wait a few seconds -->
        <executeJS stepKey="needWait" function="
                var today = new Date();
                var sec = today.getSeconds();
                return sec > 50 ? (61-sec) : 0;"/>
        <wait stepKey="conditionalWait" time="$needWait"/>

        <!-- Build the date in the correct format -->
        <generateDate stepKey="generateDate" date="+1 minute" format="m/d/Y g:i A"/>
        <executeJS stepKey="numSecondsLeft" function="
                var today = new Date();
                var sec = today.getSeconds();
                return 60 - sec;"/>
        <executeJS stepKey="getStartingTime" function="return Math.floor(new Date() / 1000);"/>
        <fillField stepKey="fillStartDate" selector="{{AdminStagingSlideOutSection.startDate}}" userInput="{$generateDate}"/>
        <fillField stepKey="fillEndDate" selector="{{AdminStagingSlideOutSection.endDate}}" userInput="{{endDate}}"/>

        <!-- Fill out the field to be changed in the staging update -->
        <fillField stepKey="fillNewName" selector="{{AdminStagingSlideOutSection.name}}" userInput="{{stagingUpdate.entityName}}"/>

        <!-- Save the update details -->
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <click stepKey="clickSave" selector="{{AdminStagingSlideOutSection.save}}"/>

        <click stepKey="saveProduct" selector="{{AdminProductFormActionSection.saveButton}}"/>
        <seeElement stepKey="assertSuccess" selector="{{AdminProductMessagesSection.successMessage}}"/>

        <!-- Check to see if we have waited the require time yet. If not, wait the rest of the time -->
        <executeJS stepKey="getEndingTime" function="return Math.floor(new Date() / 1000);"/>
        <executeJS stepKey="getTimeToWait" function="
                var timePassed = {$getEndingTime} - {$getStartingTime};
                var timeLeft = {$numSecondsLeft} - timePassed;
                return timeLeft > 0 ? timeLeft : 0;"/>
        <wait stepKey="conditionalWait2" time="$getTimeToWait"/>

        <magentoCLI stepKey="runCron" command="cron:run --group='staging'"/>
        <magentoCLI stepKey="reindex" command="indexer:reindex"/>
        <magentoCLI stepKey="flushCache" command="cache:flush"/>
    </actionGroup>

    <!-- Changes the view of the items on staging to either grid, list, or timeline -->
    <actionGroup name="changeStagingView">
        <arguments>
            <argument name="view" type="string"/>
        </arguments>

        <amOnPage stepKey="goToStagingDashboard" url="{{AdminStagingDashboardPage.url}}"/>
        <waitForPageLoad stepKey="waitForStagingDashboard"/>
        <selectOption stepKey="selectView" selector="{{AdminStagingDashboardSection.view}}" userInput="{{view}}"/>
        <waitForPageLoad stepKey="waitForViewApplied"/>
    </actionGroup>
    <actionGroup name="FillScheduleUpdateBasicActionGroup">
        <arguments>
            <argument name="schedule"/>
        </arguments>
        <fillField selector="{{AdminStagingSlideOutSection.updateName}}" userInput="{{schedule.updateName}}" stepKey="fillUpdateName"/>
        <fillField selector="{{AdminStagingSlideOutSection.updateDescription}}" userInput="{{schedule.updateDescription}}" stepKey="fillDescription"/>
        <click selector="{{AdminStagingSlideOutSection.datepickerStartDate}}" stepKey="clickDatePicker"/>
        <click selector="{{AdminStagingSlideOutSection.datepickerGoToday}}" stepKey="clickGoToday"/>
        <click selector="{{AdminStagingSlideOutSection.datepickerClose}}" stepKey="clickClose"/>
        <executeJS function="var date = new Date(jQuery('[name=\'staging[start_time]\']').val()),
        options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
        date.setMinutes(date.getMinutes() + {{schedule.scheduleMinutesAhead}});
        date.setDate(date.getDate() + 1);
        jQuery('[name=\'staging[start_time]\']').val(date.toLocaleString('en-US', options).replace(',', ''))" stepKey="executeJS"/>
        <executeJS function="jQuery('[name=\'staging[start_time]\']').trigger('change')" stepKey="executeJS2"/>
        <click selector="{{AdminStagingSlideOutSection.save}}" stepKey="clickSave"/>
        <see selector="{{AdminScheduledChangesSection.scheduleLabel(schedule.start)}}" userInput="{{schedule.start}}" stepKey="seeStart"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(schedule.updateName)}}" userInput="{{schedule.updateName}}" stepKey="seeUpdateName"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(schedule.updateDescription)}}" userInput="{{schedule.updateDescription}}" stepKey="seeDescription"/>
    </actionGroup>
    <actionGroup name="navigateToViewStagingUpdateFromStagingDashboard">
        <arguments>
            <argument name="update"/>
        </arguments>
        <amOnPage url="{{AdminStagingUpdatePage.url}}" stepKey="amOnStagingUpdatePage"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <fillField selector="{{AdminAssignToExistingUpdateSection.searchStagingName}}" userInput="{{update.updateName}}" stepKey="fillSearchStagingName"/>
        <click selector="{{AdminAssignToExistingUpdateSection.submitSearch}}" stepKey="clickSubmitSearch"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad1"/>
        <click selector="{{AdminContentStagingDashboardSection.timeLineEvent}}" stepKey="clickTimelineEvent"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad2"/>
        <click selector="{{AdminContentStagingDashboardSection.stagingEventsActions(update.updateName, update.viewedit)}}" stepKey="seePreview"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad3"/>
    </actionGroup>
    <actionGroup name="openEditSlideOutForCMSPagesStagingUpdateFromViewStagingUpdate">
        <conditionalClick selector="{{AdminStagingDashboardSection.cmsPagesDropDown}}" dependentSelector="{{AdminStagingDashboardSection.cmsPagesDropDownActive}}" visible="false" stepKey="conditionalClickCMSPagesDropDown"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <click selector="{{AdminStagingDashboardSection.cmsPagesGridSelect}}" stepKey="clickCMSPagesSelect"/>
        <waitForPageLoad time="30" stepKey="waitForCMSPageSelect"/>
        <click selector="{{AdminStagingDashboardSection.cmsPagesGridViewEdit}}" stepKey="clickCMSPagesViewEdit"/>
        <waitForPageLoad time="30" stepKey="waitForCMSPageModal"/>
    </actionGroup>
    <actionGroup name="navigateToStagingSlideout">
        <click selector="{{AdminStagingSlideOutSection.scheduleNewUpdateBtn}}" stepKey="clickOnStagingBtn" />
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.title}}" stepKey="waitForSlideOutOpen"/>
    </actionGroup>
</actionGroups>
